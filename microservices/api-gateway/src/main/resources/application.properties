spring.application.name=api-gateway
server.port=${API_GATEWAY_PORT:8080}

spring.main.web-application-type=reactive

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400}

# Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=${KUBERNETES_ENABLED:false}
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Spring Cloud Kubernetes Configuration
spring.cloud.kubernetes.enabled=${KUBERNETES_ENABLED:false}
spring.cloud.kubernetes.discovery.enabled=${KUBERNETES_ENABLED:false}
spring.cloud.kubernetes.config.enabled=false
spring.cloud.kubernetes.secrets.enabled=false

# Microservices URLs (for static routing - fallback for development)
services.user.url=${USER_SERVICE_URL:http://localhost:8087}
services.device.url=${DEVICE_SERVICE_URL:http://localhost:8082}
services.media-analysis.url=${MEDIA_ANALYSIS_SERVICE_URL:http://localhost:8083}
services.home.url=${HOME_SERVICE_URL:http://localhost:8084}
services.notification.url=${NOTIFICATION_SERVICE_URL:http://localhost:8085}
services.file-storage.url=${FILE_STORAGE_SERVICE_URL:http://localhost:8086}

# CORS Configuration - permissive for mobile app
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origin-patterns=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus,gateway
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Metrics configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Logging
logging.level.org.springframework.cloud.gateway=${LOG_LEVEL:INFO}
logging.level.ro.faur.apollo=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${LOG_LEVEL:INFO}
logging.level.org.springframework.web.reactive=${LOG_LEVEL:DEBUG}
logging.level.reactor.netty.http.client=${LOG_LEVEL:DEBUG}

# Enable structured logging for Kubernetes
spring.profiles.active=${SPRING_PROFILES_ACTIVE:kubernetes}

# Request logging
logging.level.org.springframework.cloud.gateway.filter.NettyWriteResponseFilter=TRACE
logging.level.org.springframework.cloud.gateway.filter.LoadBalancerClientFilter=TRACE

# Circuit breaker and timeout settings
spring.cloud.gateway.httpclient.connect-timeout=3000
spring.cloud.gateway.httpclient.response-timeout=10000

# Distributed Tracing Configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
# Note: Using OTLP instead of Zipkin format for tempo single binary
# management.tracing.zipkin.endpoint=http://tempo-tempo.monitoring.svc.cluster.local:4318/v1/traces

# OpenTelemetry Configuration - Fixed endpoint path
otel.service.name=${OTEL_SERVICE_NAME:${spring.application.name}}
otel.resource.attributes=${OTEL_RESOURCE_ATTRIBUTES:service.name=${spring.application.name},service.version=1.0.0,environment=${ENVIRONMENT:kubernetes}}
# OTEL Configuration
# Tempo single binary accepts OTLP traces on port 4318
management.otlp.tracing.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://tempo-tempo.monitoring.svc.cluster.local:4318}/v1/traces
otel.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://tempo-tempo.monitoring.svc.cluster.local:4318}/v1/traces
otel.exporter.otlp.protocol=${OTEL_EXPORTER_OTLP_PROTOCOL:http/protobuf}

# Enhanced Metrics Configuration
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=${ENVIRONMENT:kubernetes}
management.metrics.tags.hostname=${HOSTNAME:unknown}
management.metrics.tags.namespace=${NAMESPACE:unknown}
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,500ms

# Include shared observability configuration
spring.config.import=optional:classpath:application-observability.properties