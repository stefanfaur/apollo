services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: apollo-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-apollo_db}
      POSTGRES_USER: ${DB_USERNAME:-apollo}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-apollo123}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - apollo-network

  # MinIO (S3 compatible storage)
  minio:
    image: minio/minio:latest
    container_name: apollo-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-apollo_minio_user}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-apollo_minio_password}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - apollo-network

  # Init container to bootstrap the bucket + policy
  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    # wait a bit for MinIO to be ready, then:
    entrypoint: >
      sh -c "sleep 10 && mc alias set local http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} && mc mb local/apollo-bucket && mc policy set writeonly local/apollo-bucket"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-apollo_minio_user}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-apollo_minio_password}
    networks:
      - apollo-network

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: apollo-mosquitto
    ports:
      - "1883:1883"
      - "9002:9001"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - apollo-network

volumes:
  postgres_data:
  minio_data:

networks:
  apollo-network:
    driver: bridge